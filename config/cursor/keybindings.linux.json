[
  {
    "key": "ctrl+;",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+ctrl+a",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+ctrl+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+b",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+]",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+[Semicolon]",
    "command": "workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "shift+ctrl+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+ctrl+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+ctrl+o",
    "command": "search.action.openNewEditor"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.debug.start"
  },
  {
    "key": "alt+ctrl+b",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+q",
    "command": "testing.runAtCursor",
    "when": "editorLangId == 'go'"
  },
  {
    "key": "alt+q",
    "command": "testing.reRunLastRun",
    "when": "testing.hasAnyResults"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "u",
    "command": "undo",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+r",
    "command": "redo",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+n",
    "command": "-editor.action.rejectGPT4",
    "when": "editorTextFocus && hasGPT4Diff"
  },
  {
    "key": "ctrl+n",
    "command": "-editor.action.inlineDiffs.rejectPartialEdit",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "ctrl+n",
    "command": "-aichat.newChat",
    "when": "focusedView == 'workbench.panel.aichat.view'"
  },
  {
    "key": "ctrl+n",
    "command": "-composer.createNew",
    "when": "focusedView == 'workbench.panel.composerViewPane2.view'"
  },
  {
    "key": "u",
    "command": "undo",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+z",
    "command": "redo",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+i",
    "command": "composerMode.agent"
  },
  {
    "key": "ctrl+l",
    "command": "composerMode.chat"
  },
  {
    "key": "shift+enter",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\\\\r\n"
    },
    "when": "terminalFocus"
  },
  {
    "key": "shift+ctrl+e",
    "command": "composer.showBackgroundAgentHistory",
    "when": "backgroundComposerEnabled || showBackgroundAgentHistoryAction"
  },
  {
    "key": "ctrl+e",
    "command": "-composer.showBackgroundAgentHistory",
    "when": "backgroundComposerEnabled || showBackgroundAgentHistoryAction"
  },
  {
    "key": "shift+ctrl+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+d",
    "command": "-workbench.action.debug.run",
    "when": "!inDebugMode && !terminalFocus"
  },
  {
    "key": "shift+ctrl+e",
    "command": "-pgsql.runQuery",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "shift+enter",
    "command": "-pgsql.runQuery",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+ctrl+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+enter",
    "command": "pgsql.runCurrentStatement",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "shift+alt+enter",
    "command": "pgsql.runQuery",
    "when": "editorTextFocus && editorLangId == 'sql'"
  }
]
