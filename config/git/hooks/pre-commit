#!/usr/bin/env bash
set -euo pipefail

# Warn if local UI-managed settings differ from their example templates,
# ignoring specific, known-local fields.
# Warn-only: this hook never blocks commits.

have_jq=1
command -v jq >/dev/null 2>&1 || have_jq=0

warn_diff() {
  local name="$1"; shift
  local real="$1"; shift
  local example="$1"; shift
  local jq_filter="${1:-.}"; shift || true

  [ -f "$real" ] || return 0
  [ -f "$example" ] || return 0

  if [ $have_jq -eq 1 ] && [[ "$real" == *.json && "$example" == *.json ]]; then
    if ! diff -u <(jq -S "$jq_filter" "$example") <(jq -S "$jq_filter" "$real") >/dev/null; then
      echo "[dotfiles hook] Detected local changes in $name (ignored fields filtered with jq):" >&2
      diff -u <(jq -S "$jq_filter" "$example") <(jq -S "$jq_filter" "$real") || true
      echo >&2
      echo "Consider updating the example with non-secret defaults. Known-local fields are ignored in this check." >&2
      : # warn only; never block
    fi
  else
    if ! diff -u "$example" "$real" >/dev/null 2>&1; then
      echo "[dotfiles hook] Detected local changes in $name (jq not found; raw diff, cannot ignore fields):" >&2
      diff -u "$example" "$real" || true
      : # warn only; never block
    fi
  fi
}

# Hard-coded ignored fields:
# - Cursor: pgsql.serverGroups, pgsql.connections, diffEditor.renderSideBySide
# - Claude: model, alwaysThinkingEnabled
warn_diff \
  "Cursor settings" \
  "config/cursor/settings.json" \
  "config/cursor/settings.example.json" \
  'del(.["pgsql.serverGroups"], .["pgsql.connections"], .["diffEditor.renderSideBySide"])'

warn_diff \
  "Claude settings" \
  "config/claude/settings.json" \
  "config/claude/settings.example.json" \
  'del(.model, .feedbackSurveyState, .alwaysThinkingEnabled)'

# Codex: compare shared keys using yq (ignore local-only sections).
warn_diff_codex() {
  local real="config/codex/config.toml"
  local example="config/codex/config.example.toml"
  [ -f "$real" ] || return 0
  [ -f "$example" ] || return 0
  local filter='del(.projects, .sandbox_workspace_write.writable_roots, .model, .model_reasoning_effort)'
  if ! diff -u <(yq -p=toml -o=json "$filter" "$example" | jq -S '.') \
                 <(yq -p=toml -o=json "$filter" "$real" | jq -S '.') >/dev/null; then
    echo "[dotfiles hook] Codex shared keys differ from example (ignoring projects.*, sandbox_workspace_write.writable_roots, model, model_reasoning_effort):" >&2
    diff -u <(yq -p=toml -o=json "$filter" "$example" | jq -S '.') \
            <(yq -p=toml -o=json "$filter" "$real" | jq -S '.') || true
    : # warn only; never block
  fi
}

warn_diff_codex

exit 0
