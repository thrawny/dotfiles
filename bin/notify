#!/usr/bin/env python3
"""Cross-OS notify hook for Codex/Claude.

Behavior:
- macOS (Darwin): plays a system sound via afplay
- Linux: no-op (exits 0)

Notes:
- Accepts and ignores any arguments (e.g., Codex JSON payload).
- Configurable via env vars:
  - NOTIFY_SOUND: path to sound file (default: /System/Library/Sounds/Glass.aiff)
  - NOTIFY_VOLUME: afplay volume 0.0â€“2.0 (default: 1.5)
"""

from __future__ import annotations

import os
import platform
import subprocess
import sys


def macos_notify() -> None:
    sound_file = os.environ.get("NOTIFY_SOUND", "/System/Library/Sounds/Glass.aiff")
    volume = os.environ.get("NOTIFY_VOLUME", "1.5")
    try:
        subprocess.run(["/usr/bin/afplay", "-v", volume, sound_file], check=False,
                       stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, timeout=5)
    except Exception:
        # Keep hook non-fatal
        pass


def main(argv: list[str]) -> int:
    system = platform.system()
    if system == "Darwin":
        macos_notify()
    # Linux and others: no-op
    return 0


if __name__ == "__main__":
    sys.exit(main(sys.argv))
