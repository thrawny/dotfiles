# Exports
export ZSH=$HOME/.oh-my-zsh
export WORKON_HOME=~/.venvs
export PYTHONDONTWRITEBYTECODE=1
export GOPATH=$HOME/go
export EDITOR=vim
export AWS_PAGER=""

# Load nvm if present
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

ZSH_THEME="thrawny"

plugins=(
  git
  history
  history-substring-search
  docker
  python
  zsh-autosuggestions
  jira
  web-search
)

PATH=$PATH:$GOPATH/bin:$HOME/dotfiles/bin
[[ ":$PATH:" != *":/usr/local/bin:"* ]] && PATH="/usr/local/bin:${PATH}"
[[ ":$PATH:" != *":$HOME/.local/bin:"* ]] && PATH="$HOME/.local/bin:${PATH}"

export PATH

# OSX specific stuff
if [[ "$(uname)" == "Darwin" ]]; then
  export LANG="C"
  plugins+=(osx)
else
  alias pbcopy='xclip -selection clipboard'
  alias pbpaste='xclip -selection clipboard -o'
fi;

if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi

source $ZSH/oh-my-zsh.sh

bindkey ^F forward-word
bindkey ^f forward-word

unalias -m "gpo"
unalias -m "gp"
unalias -m "gcam"
unalias -m "gcm"

# Aliases
alias pi="pip install -r requirements.txt"
alias pc="pip-compile"
alias fig="docker-compose"
alias svh="sudo vim /etc/hosts"
alias vbm="VBoxManage"
alias pycheck='isort && flake8 && pytest'
alias pyupdatecheck='pip-compile --upgrade --dry-run | diff -i requirements.txt -'
alias vpn='sudo openvpn'
alias k='kubectl'
alias kt='stern'
alias ka='kubectl apply -f'
alias kn='kubectl -n kube-system'
alias ki='kubectl -n istio-system'
alias kp='kubectl get pods'
alias gsha='git rev-parse HEAD | cut -c1-9'
alias klf='kubectl logs -f'
alias kl='kubectl logs'
alias ku='kubectl config use-context'
alias hb='gh repo view --web'
alias gt='gofmt -w . && golangci-lint run --skip-files lab.go --skip-dirs lab && go test ./...'
alias b='bat -p --pager=never'
alias kubectl-extract-context='kc config view --minify=true --flatten --context'
alias kec='kubectl-extract-context'
alias ci='openci'
alias vkp='watch -n 1 kubectl get pods'
alias kvp='watch -n 1 kubectl get pods'
alias v='watch -n 1'
alias kd='kc drain --ignore-daemonsets --delete-local-data --force'
alias gcam="git add -A && git commit -m"
alias tfa='terraform apply'
alias bu='brew upgrade'
alias mp='microplane'
alias gcr='git-cleanup-repo'
alias pr='gh pr create --web'
alias kdp='kubectl describe pod'
alias striplines='tr -d "\n"'
alias knp='kubectl -n kube-system get pod'
alias kd='kubectl delete'
alias gcm='git commit -m'
alias kdf='kubectl delete -f'
alias gp='git push --force-with-lease --force-if-includes'

# Functions
function gtrm() {
  git tag --delete $1 && git push --delete origin $1
}

function gpo() {
  git push -u origin $(git_current_branch)
}

function kcaev() {
  envsubst < $1 | kubectl apply -f -
}

function ktc() {
  stern $1 -c $1 -e "kube-probe|Checking status...|health check|Accepted connection from /100" ${@:2}
}

function kcpf() {
  while true; do
    kubectl port-forward "$@"
  done
}

function asudo() {
  export $(awsudo default)
}

function dbp() {
  docker build -t $1 . && docker push $1
}

function ktjq() {
  stern $1 --output raw | jq -r -R 'fromjson? | "\(.["timestamp"]) [\(.level)] - \(.message)"'
}

function uuid() {
  python3 -c "import uuid;print(uuid.uuid4())"
}

function wtfpipeoutput () {
  cat <<EOF
command &> out          # for both going to out, works in bash and zsh
command >out 2>&1       # for both going to out
command > out 2>error   # std out to out, stderr to error
EOF
}

[ -f ~/.zsh.local ] && source ~/.zsh.local

eval "$(direnv hook zsh)"
